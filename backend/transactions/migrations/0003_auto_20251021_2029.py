# Generated by Django 4.2.7 on 2025-10-21 23:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


def assign_tags_to_first_user(apps, schema_editor):
    """
    Atribui todas as tags existentes ao primeiro usuário
    """
    Tag = apps.get_model('transactions', 'Tag')
    User = apps.get_model('auth', 'User')
    
    # Obter o primeiro usuário ou criar um usuário padrão
    first_user = User.objects.first()
    if not first_user:
        first_user = User.objects.create_user(
            username='admin',
            email='admin@nossagrana.com',
            password='admin123'
        )
    
    # Atribuir todas as tags ao primeiro usuário
    Tag.objects.update(user=first_user)


def reverse_assign_tags(apps, schema_editor):
    """
    Reverter a atribuição de tags (não faz nada)
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('transactions', '0002_transaction_account_transaction_credit_card_and_more'),
    ]

    operations = [
        # Adicionar campo user como nullable primeiro
        migrations.AddField(
            model_name='tag',
            name='user',
            field=models.ForeignKey(
                null=True,
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name='Usuário'
            ),
        ),
        
        # Executar função para atribuir tags ao primeiro usuário
        migrations.RunPython(assign_tags_to_first_user, reverse_assign_tags),
        
        # Tornar o campo obrigatório
        migrations.AlterField(
            model_name='tag',
            name='user',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name='Usuário'
            ),
        ),
        
        # Adicionar novos campos
        migrations.AddField(
            model_name='tag',
            name='description',
            field=models.CharField(blank=True, max_length=100, verbose_name='Descrição'),
        ),
        migrations.AddField(
            model_name='tag',
            name='is_default',
            field=models.BooleanField(default=False, verbose_name='Tag Padrão'),
        ),
        migrations.AddField(
            model_name='tag',
            name='usage_count',
            field=models.IntegerField(default=0, verbose_name='Contador de Uso'),
        ),
        migrations.AddField(
            model_name='tag',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        
        # Remover constraint de unicidade global do nome
        migrations.AlterField(
            model_name='tag',
            name='name',
            field=models.CharField(max_length=30, verbose_name='Nome'),
        ),
        
        # Adicionar constraint de unicidade por usuário
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together={('user', 'name')},
        ),
        
        # Alterar ordenação
        migrations.AlterModelOptions(
            name='tag',
            options={'ordering': ['-usage_count', 'name'], 'verbose_name': 'Tag', 'verbose_name_plural': 'Tags'},
        ),
    ]
